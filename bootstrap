#!/bin/bash
#
# Make symbolic links for dotfiles.
# Written by Robert KÃ¤llgren.

# Directories
linkdir=~
targetdir=~/dotfiles
backupdir="$targetdir"_backup

# Counter variables
filesmoved=0
fileslinked=0
errors=0

# Allowed files
files="$(cat $targetdir/files)"
selectedfiles="$files"

# Print message
print_message() {
    echo "$(basename $0): $*"
}

select_files() {
    tput smcup
    clear

    selectedfiles=
    echo "Select the files you want to install with [y]es or [n]o:"
    echo

    for file in $files; do
	read -n 1 -p "$file: "
	echo
	if [[ $REPLY =~ ^[Yy]$ ]]; then
	    selectedfiles="$selectedfiles $file"
	fi
    done

    echo
    read -n 1 -p "Press any key to continue..."

    tput rmcup
}

# Create backup directory if not already existing
make_backup_dir() {
    if [ ! -d "$backupdir" ]; then
	echo -n "Creating backup directory ..."
	mkdir "$backupdir"
	echo "done"
    fi
}

# Move existing dotfiles (that are not already symlinks) to the backup directory
backup() {    
    for file in $*; do
	if [ -e "$linkdir"/"$file" ]; then
	    if [ -L "$linkdir"/"$file" -a $(readlink "$linkdir"/"$file") = "$targetdir"/"$file" ]; then
		continue
	    fi

	    mv "$linkdir"/"$file" "$backupdir"
	    if [ ! -e "$linkdir"/"$file" ]; then
		let filesmoved++
	    fi
	fi
    done
}

# Make symbolic links
link() {
    for file in $*; do
	if [ -e "$targetdir"/"$file" ]; then
	    if [ -L "$linkdir"/"$file" -a $(readlink "$linkdir"/"$file" = "$targetdir"/"$file") ]; then
		print_message "$linkdir"/"$file": symlink already exists, nothing to be done
		continue
	    fi

	    mkdir -p "$linkdir"/"$(dirname $file)"
	    ln -s "$targetdir"/"$file" "$linkdir"/"$file"
	    let fileslinked++
	    echo -e "\033[1;36m$linkdir/$file\033[0m -> $targetdir/$file"
	else
	    let print_message
	    errors++ "error: cannot access $targetdir/$file: No such file or directory"
	fi
    done    
}

# Main function
main() {
    if [ $# -eq 0 ]; then
	print_message "No valid file given"
	exit 1
    fi

    read -n 1 -p "You are about to create $# symlinks in $linkdir to files in $targetdir. Do you want to continue? (y/n): "
    echo

    if [[ ! $REPLY =~ ^[Yy]$ ]]; then
	print_message "Aborted"
	exit 0
    fi

    make_backup_dir
    
    echo
    echo -n "Backing up existing files ..."
    backup "$*"
    echo "done"
    
    echo "Creating symbolic links ... "
    echo
    link "$*"
    echo
    echo "...all done"
    
    echo
    echo "$filesmoved file(s) backed up to $backupdir/"
    echo "$fileslinked symbolic link(s) created"
    echo "$errors error(s)"
}

# Entry point
if [ $# -gt 0 ]; then
    filteredfiles=

    for file in $*; do
	for allowed_file in $files; do
	    if [ "$file" = "$allowed_file" ]; then
		filteredfiles="$filteredfiles $file"
		break
	    fi
	done
    done
    
    files="$filteredfiles"
    selectedfiles="$files"
fi

read -n 1 -p "Press [f] for full install, [p] for partial: "
echo
echo

case $REPLY in
    f )
	;;
    p )
	select_files
	;;
    * )
	print_message "Aborted"
	exit 0
	;;
esac

main $selectedfiles
